#!/usr/bin/env perl

use 5.010;
use strict;
use warnings;
use Log::ger;

use Perinci::CmdLine::Any;

our %SPEC;

sub fmt {
    my $s = lc shift;
    return $s if $s =~ /\s/;
    $s =~ s/[_.]/ /g;
    $s;
}

$SPEC{app} = {
    v => 1.1,
    args => {
        files   => { schema => ['array*', of=>'filename*'], req=>1, pos=>0, greedy=>1 },
        show    => { schema => "str*", },
    },
    features => {
        dry_run => 1,
    },
};
sub app {
    my %args = @_;

    for my $file (@{ $args{files} }) {
        $file =~ /(.*?)[ _.-]*S(\d\d?)E(\d\d)[ _.-]*(.*)\.(\w+)$/i or
            $file =~ /^(.*?)[ _.-]*(\d\d?)\s*x?\s*(\d\d)[ _.-]*(.*)\.(\w+)$/i or
            $file =~ /(.*?)[ _.-]*SE?(\d\d?)[ _.-]*Ep?(\d\d)[ _.-]*(.*)\.(\w+)$/i or
            do {
                warn "File '$file' doesn't contain episode number or extension, skipped\n";
                next;
            };
        my ($show, $season, $epnum, $title, $ext) = ($1, $2, $3, $4, $5);
        log_debug("show=[$show], season=[$season], epnum=[$epnum], title=[$title], ext=[$ext]");
        $show = $args{show} if $args{show};
        $show //= "unknown show";
        $show = fmt($show) if $show;
        $title = fmt($title) if $title;
        my $fn = sprintf "%s - %02d%02d%s.%s", $show, $season, $epnum,
            ($title ? " - $title" : ""), lc($ext);
        next if $file eq $fn;
        log_info("$file -> $fn");
        rename $file, $fn unless $args{-dry_run};
    }
    [200];
}

Perinci::CmdLine::Any->new(
    url => '/main/app',
    log => 1,
)->run;
